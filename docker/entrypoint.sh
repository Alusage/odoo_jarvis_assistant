#!/bin/bash

# Script d'entr√©e pour synchroniser odoo.conf et installer les d√©pendances

ODOO_CONF_DIR="/etc/odoo"
CUSTOM_CONF_DIR="/mnt/config"
CUSTOM_CONF_FILE="${CUSTOM_CONF_DIR}/odoo.conf"
REQUIREMENTS_FILE="/mnt/requirements.txt"
EXTRA_ADDONS_DIR="/mnt/extra-addons"
ADDONS_DIR="/mnt/addons"

# Couleurs
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

echo_info() { echo -e "${BLUE}-  $1${NC}"; }
echo_success() { echo -e "${GREEN}‚úÖ $1${NC}"; }
echo_warning() { echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"; }
echo_error() { echo -e "${RED}‚ùå $1${NC}"; }

echo_info "üöÄ Initialisation du conteneur Odoo personnalis√©..."

# S'assurer que les r√©pertoires mont√©s ont les bonnes permissions
echo_info "üîß V√©rification des permissions..."
if [ -d "$CUSTOM_CONF_DIR" ] && [ ! -w "$CUSTOM_CONF_DIR" ]; then
    echo_warning "Permissions insuffisantes sur $CUSTOM_CONF_DIR"
fi

# S'assurer que le r√©pertoire de donn√©es Odoo existe et a les bonnes permissions
if [ ! -d "/data" ]; then
    echo_info "üìÅ Cr√©ation du r√©pertoire de donn√©es /data..."
    mkdir -p /data
fi

# Cr√©er les sous-r√©pertoires n√©cessaires pour Odoo
echo_info "üìÅ Cr√©ation des sous-r√©pertoires de donn√©es..."
mkdir -p /data/filestore /data/sessions /data/addons

# G√©rer les permissions du r√©pertoire de donn√©es
echo_info "üîß Configuration des permissions pour /data..."
if [ "$(id -u)" = "0" ]; then
    # Si on est root, configurer les permissions correctement
    chown -R odoo:odoo /data
    chmod -R 755 /data
    echo_success "‚úÖ Permissions configur√©es en tant que root"
else
    # Si on n'est pas root, v√©rifier si on peut √©crire
    if [ ! -w "/data" ] || [ ! -w "/data/sessions" ] || [ ! -w "/data/filestore" ]; then
        echo_warning "‚ö†Ô∏è Permissions insuffisantes sur /data, tentative de correction..."
        chmod -R 755 /data 2>/dev/null || true
        
        # Test d'√©criture
        if [ ! -w "/data/sessions" ]; then
            echo_error "‚ùå Impossible d'obtenir les permissions d'√©criture sur /data/sessions"
            echo_info "üí° Solution: relancez avec -e DEBUG_MODE=true pour investigation"
            echo_info "üí° Ou configurez les permissions sur l'h√¥te: sudo chown -R 101:101 ./data"
        else
            echo_success "‚úÖ Permissions corrig√©es"
        fi
    else
        echo_success "‚úÖ Permissions correctes sur /data"
    fi
fi

# Si le fichier odoo.conf n'existe pas dans le dossier client, le copier depuis l'image officielle
if [ ! -f "$CUSTOM_CONF_FILE" ]; then
    echo_info "üìÑ Cr√©ation du fichier odoo.conf..."
    
    # V√©rifier que le r√©pertoire de destination existe
    if [ ! -d "$CUSTOM_CONF_DIR" ]; then
        echo_warning "R√©pertoire $CUSTOM_CONF_DIR n'existe pas, cr√©ation..."
        mkdir -p "$CUSTOM_CONF_DIR" || {
            echo_error "Impossible de cr√©er le r√©pertoire $CUSTOM_CONF_DIR"
            exit 1
        }
    fi
    
    # G√©n√©rer un fichier de configuration minimal directement
    echo_info "G√©n√©ration d'un fichier de configuration minimal..."
    cat > "$CUSTOM_CONF_FILE" << EOF
[options]
addons_path = /usr/lib/python3/dist-packages/odoo/addons
data_dir = /data
logfile = /var/log/odoo/odoo.log
log_level = info
db_host = db
db_port = 5432
db_user = odoo
db_password = odoo
EOF
    
    if [ $? -eq 0 ]; then
        echo_success "‚úÖ Fichier odoo.conf cr√©√© dans $CUSTOM_CONF_DIR"
    else
        echo_error "‚ùå Impossible de cr√©er le fichier odoo.conf"
        echo_warning "Tentative avec un fichier temporaire..."
        
        # Si √©chec, utiliser un fichier temporaire et d√©marrer sans config personnalis√©e
        CUSTOM_CONF_FILE="/tmp/odoo.conf"
        cat > "$CUSTOM_CONF_FILE" << EOF
[options]
addons_path = /usr/lib/python3/dist-packages/odoo/addons
data_dir = /data
logfile = /var/log/odoo/odoo.log
log_level = info
db_host = db
db_port = 5432
db_user = odoo
db_password = odoo
EOF
        echo_warning "‚ö†Ô∏è  Utilisation d'un fichier de configuration temporaire"
    fi
fi

# Installer les d√©pendances Python si le fichier requirements.txt existe
if [ -f "$REQUIREMENTS_FILE" ]; then
    echo_info "üì¶ Installation des d√©pendances Python..."
    /usr/local/bin/install_requirements.sh
fi

# Construire le chemin des addons
ADDONS_PATH="/usr/lib/python3/dist-packages/odoo/addons"

# Ajouter extra-addons au chemin s'il existe (contient les liens symboliques vers les modules)
if [ -d "$EXTRA_ADDONS_DIR" ] && [ "$(ls -A $EXTRA_ADDONS_DIR 2>/dev/null)" ]; then
    ADDONS_PATH="$EXTRA_ADDONS_DIR,$ADDONS_PATH"
    echo_info "üìÅ Modules extra-addons d√©tect√©s et ajout√©s au chemin"
fi

echo_info "üîß Chemin des addons: $ADDONS_PATH"

# V√©rification finale des permissions sur le r√©pertoire de donn√©es
if [ ! -w "/data" ]; then
    echo_warning "‚ö†Ô∏è Permissions insuffisantes sur /data, tentative de correction..."
    if [ "$(id -u)" = "0" ]; then
        chown -R odoo:odoo /data
        chmod -R 755 /data
    else
        chmod -R 755 /data 2>/dev/null || true
    fi
    if [ ! -w "/data" ]; then
        echo_error "‚ùå Impossible d'obtenir les permissions d'√©criture sur /data"
        echo_info "üí° V√©rifiez que le volume /data est mont√© avec les bonnes permissions"
        echo_info "üí° Commande sugg√©r√©e: sudo chown -R 101:101 ./data"
    else
        echo_success "‚úÖ Permissions corrig√©es sur /data"
    fi
fi

# Cr√©er les sous-r√©pertoires n√©cessaires dans /data
echo_info "üìÅ Cr√©ation des sous-r√©pertoires n√©cessaires..."
mkdir -p /data/sessions /data/filestore /data/addons
if [ "$(id -u)" = "0" ]; then
    chown -R odoo:odoo /data/sessions /data/filestore /data/addons
fi
chmod -R 755 /data/sessions /data/filestore /data/addons 2>/dev/null || true

# Fonction pour d√©marrer Odoo avec gestion d'erreur
start_odoo() {
    echo_info "üöÄ D√©marrage d'Odoo..."
    
    # Basculer vers l'utilisateur odoo pour lancer Odoo
    echo_info "üë§ Basculement vers l'utilisateur odoo..."
    
    # Configurer l'environnement pour l'utilisateur odoo
    export HOME=/var/lib/odoo
    export PATH="/var/lib/odoo/.local/bin:$PATH"
    
    # Si aucun argument ou si l'argument est "odoo", lancer odoo normalement
    if [ $# -eq 0 ] || [ "$1" = "odoo" ]; then
        gosu odoo odoo --config "$CUSTOM_CONF_FILE" --addons-path="$ADDONS_PATH"
    else
        # Sinon, passer tous les arguments √† odoo
        gosu odoo odoo --config "$CUSTOM_CONF_FILE" --addons-path="$ADDONS_PATH" "$@"
    fi
    
    # Capturer le code de sortie
    local exit_code=$?
    
    # Si Odoo a √©chou√© et que le mode debug est activ√©, d√©marrer un shell pour le d√©bogage
    if [ $exit_code -ne 0 ] && [ "${DEBUG_MODE:-false}" = "true" ]; then
        echo_error "‚ùå Odoo s'est arr√™t√© avec le code d'erreur: $exit_code"
        echo_warning "üîç Mode d√©bogage activ√© - D√©marrage du shell de d√©bogage..."
        echo_info "üìù Informations de d√©bogage:"
        echo_info "   - Fichier de configuration: $CUSTOM_CONF_FILE"
        echo_info "   - Chemin des addons: $ADDONS_PATH"
        echo_info "   - Utilisateur actuel: $(whoami)"
        echo_info "   - R√©pertoire actuel: $(pwd)"
        echo_info "   - Variables d'environnement:"
        echo_info "     ODOO_CONF_DIR=$ODOO_CONF_DIR"
        echo_info "     CUSTOM_CONF_DIR=$CUSTOM_CONF_DIR"
        echo_info "     REQUIREMENTS_FILE=$REQUIREMENTS_FILE"
        echo_info "     EXTRA_ADDONS_DIR=$EXTRA_ADDONS_DIR"
        echo_info "     ADDONS_DIR=$ADDONS_DIR"
        echo_info "     DEBUG_MODE=$DEBUG_MODE"
        echo_info ""
        echo_info "üí° Utilisez 'docker exec -it <container_name> bash' pour acc√©der au shell"
        echo_info "üí° Pour relancer Odoo manuellement: gosu odoo odoo --config $CUSTOM_CONF_FILE --addons-path=$ADDONS_PATH"
        echo_info "üí° Ou en tant que root: odoo --config $CUSTOM_CONF_FILE --addons-path=$ADDONS_PATH"
        echo_info ""
        echo_warning "‚è≥ Maintien du conteneur en vie pour le d√©bogage..."
        
        # Maintenir le conteneur en vie avec un shell interactif en tant que root
        exec /bin/bash
    elif [ $exit_code -ne 0 ]; then
        echo_error "‚ùå Odoo s'est arr√™t√© avec le code d'erreur: $exit_code"
        echo_info "üí° Pour activer le mode d√©bogage, d√©finissez DEBUG_MODE=true"
        echo_info "üí° Exemple: docker run -e DEBUG_MODE=true ..."
        exit $exit_code
    fi
    
    return $exit_code
}

# Lancer Odoo avec le fichier de configuration personnalis√© et le chemin des addons
start_odoo "$@"
