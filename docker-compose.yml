# Docker Compose principal pour Traefik et réseau partagé
# Ce fichier configure l'infrastructure commune pour tous les clients Odoo

version: '3.8'

services:

  # ============================
  # |    Traefik               |
  # ============================
  traefik:
    # Build information
    container_name: traefik
    image: traefik:2.10
    restart: unless-stopped
    shm_size: 128m

    # Build instructions
    ports:
      - "80:80"       # Traefik HTTP sur port 80 standard
      - "8080:8080"   # Dashboard Traefik
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.entrypoints=web
      - traefik.http.routers.traefik.rule=Host(`traefik.localhost`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard/`))
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.services.traefik.loadbalancer.server.port=8080
      # Odoo compress
      - traefik.http.middlewares.odoo-compress.compress=True
      # Odoo headers
      - traefik.http.middlewares.odoo-headers.headers.customRequestHeaders.Upgrade=websocket
      - traefik.http.middlewares.odoo-headers.headers.customRequestHeaders.Connection=Upgrade
      - traefik.http.middlewares.odoo-headers.headers.hostsproxyheaders=websocket,Upgrade
      # Odoo forward
      - traefik.http.middlewares.odoo-forward.headers.customrequestheaders.X-Forwarded-Proto=http
    volumes:
      # Container localtime
      - /etc/localtime:/etc/localtime:ro
      # Docker socket
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Traefik conf
      - ./traefik.yml:/etc/traefik/traefik.yml:ro
    networks:
      - traefik-local

  # ============================
  # |    MCP Server            |
  # ============================
  mcp-server:
    build:
      context: .
      dockerfile: mcp_server/Dockerfile
      args:
        - DOCKER_GID=${DOCKER_GID:-997}
        - USER_ID=${USER_ID:-1000}
    container_name: odoo-mcp-server
    restart: unless-stopped
    volumes:
      - ./:/repo  # Mount repository with write access for Docker operations
      - /var/run/docker.sock:/var/run/docker.sock  # For Docker operations (read-write)
    environment:
      - PYTHONUNBUFFERED=1
      - DOCKER_HOST=unix:///var/run/docker.sock  # Explicitly set Docker host
    networks:
      - traefik-local
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-local"
      
      # HTTP routing
      - "traefik.http.routers.mcp-server.rule=Host(`mcp.localhost`)"
      - "traefik.http.routers.mcp-server.entrypoints=web"
      - "traefik.http.services.mcp-server.loadbalancer.server.port=8000"
      
      # CORS headers for API
      - "traefik.http.routers.mcp-server.middlewares=cors-headers"
      - "traefik.http.middlewares.cors-headers.headers.accesscontrolallowmethods=GET,POST,PUT,DELETE,OPTIONS"
      - "traefik.http.middlewares.cors-headers.headers.accesscontrolallowheaders=*"
      - "traefik.http.middlewares.cors-headers.headers.accesscontrolalloworiginlist=*"
      - "traefik.http.middlewares.cors-headers.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.cors-headers.headers.addvaryheader=true"

  # ============================
  # |    Dashboard             |
  # ============================
  dashboard:
    build:
      context: ./odoo-dashboard
      dockerfile: Dockerfile.dev
    container_name: odoo-dashboard
    restart: unless-stopped
    volumes:
      - ./odoo-dashboard:/app
      - /app/node_modules
    environment:
      - VITE_MCP_SERVER_URL=http://mcp-server:8000
    networks:
      - traefik-local
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-local"
      - "traefik.http.routers.odoo-dashboard.rule=Host(`dashboard.localhost`)"
      - "traefik.http.routers.odoo-dashboard.entrypoints=web"
      - "traefik.http.services.odoo-dashboard.loadbalancer.server.port=3000"

networks:
  traefik-local:
    name: traefik-local
    driver: bridge